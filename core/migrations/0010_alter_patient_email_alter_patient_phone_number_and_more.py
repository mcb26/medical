# Generated by Django 5.1.5 on 2025-02-17 19:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0009_alter_appointment_options_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=models.EmailField(help_text='Hauptkontakt-E-Mail des Patienten', max_length=255, verbose_name='Primäre E-Mail'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone_number',
            field=models.CharField(help_text='Hauptkontaktnummer des Patienten', max_length=20, verbose_name='Primäre Telefonnummer'),
        ),
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('absence_type', models.CharField(choices=[('vacation', 'Urlaub'), ('sick', 'Krankheit'), ('training', 'Fortbildung'), ('other', 'Sonstiges')], max_length=20, verbose_name='Abwesenheitsgrund')),
                ('start_date', models.DateField(verbose_name='Startdatum')),
                ('end_date', models.DateField(verbose_name='Enddatum')),
                ('start_time', models.TimeField(blank=True, help_text='Nur bei stundenweiser Abwesenheit', null=True, verbose_name='Startzeit')),
                ('end_time', models.TimeField(blank=True, help_text='Nur bei stundenweiser Abwesenheit', null=True, verbose_name='Endzeit')),
                ('is_full_day', models.BooleanField(default=True, verbose_name='Ganztägig')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notizen')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Genehmigt am')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_absences', to=settings.AUTH_USER_MODEL, verbose_name='Genehmigt von')),
                ('practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to='core.practitioner', verbose_name='Behandler')),
            ],
            options={
                'verbose_name': 'Abwesenheit',
                'verbose_name_plural': 'Abwesenheiten',
                'ordering': ['-start_date', '-start_time'],
            },
        ),
        migrations.CreateModel(
            name='PatientContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(choices=[('private', 'Privat'), ('work', 'Arbeit'), ('mobile', 'Mobil'), ('other', 'Sonstige')], max_length=20, verbose_name='Kontaktart')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefonnummer')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-Mail')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primärer Kontakt')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notizen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='core.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Patientenkontakt',
                'verbose_name_plural': 'Patientenkontakte',
                'ordering': ['-is_primary', 'contact_type'],
            },
        ),
        migrations.CreateModel(
            name='RecurringAbsence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repeat_type', models.CharField(choices=[('weekly', 'Wöchentlich'), ('monthly', 'Monatlich'), ('yearly', 'Jährlich')], max_length=20)),
                ('repeat_until', models.DateField()),
                ('base_absence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_pattern', to='core.absence')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titel')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Beschreibung')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Fällig am')),
                ('priority', models.CharField(choices=[('low', 'Niedrig'), ('medium', 'Mittel'), ('high', 'Hoch')], default='medium', max_length=10, verbose_name='Priorität')),
                ('status', models.CharField(choices=[('open', 'Offen'), ('in_progress', 'In Bearbeitung'), ('completed', 'Erledigt'), ('cancelled', 'Abgebrochen')], default='open', max_length=20, verbose_name='Status')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Erledigt am')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to='core.practitioner', verbose_name='Zugewiesen an')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to='core.practitioner', verbose_name='Erstellt von')),
            ],
            options={
                'verbose_name': 'Aufgabe',
                'verbose_name_plural': 'Aufgaben',
                'ordering': ['-priority', 'due_date', '-created_at'],
            },
        ),
    ]
