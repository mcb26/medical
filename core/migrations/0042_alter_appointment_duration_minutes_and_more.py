# Generated by Django 5.1.5 on 2025-10-01 17:55

import core.validators
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0041_fix_logical_issues'),
    ]

    operations = [
        migrations.AlterField(
            model_name='appointment',
            name='duration_minutes',
            field=models.IntegerField(default=30, validators=[core.validators.validate_appointment_duration], verbose_name='Dauer (Minuten)'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=core.validators.EmailField(help_text='Hauptkontakt-E-Mail des Patienten', max_length=255, validators=[django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'), django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')], verbose_name='Primäre E-Mail'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone_number',
            field=core.validators.PhoneNumberField(help_text='Hauptkontaktnummer des Patienten', max_length=20, validators=[django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$'), django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$')], verbose_name='Primäre Telefonnummer'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='postal_code',
            field=core.validators.PostalCodeField(max_length=5, validators=[django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$'), django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$')]),
        ),
        migrations.CreateModel(
            name='DataProtectionConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_given', models.BooleanField(default=False, verbose_name='Einwilligung erteilt')),
                ('consent_text_version', models.CharField(max_length=50, verbose_name='Textversion')),
                ('consent_text', models.TextField(verbose_name='Einwilligungstext')),
                ('consent_date', models.DateTimeField(auto_now_add=True, verbose_name='Einwilligungsdatum')),
                ('revoked', models.BooleanField(default=False, verbose_name='Widerrufen')),
                ('revoked_at', models.DateTimeField(blank=True, null=True, verbose_name='Widerrufsdatum')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='Gültig bis')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_consents', to='core.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Datenschutzeinwilligung',
                'verbose_name_plural': 'Datenschutzeinwilligungen',
                'ordering': ['-consent_date'],
            },
        ),
    ]
