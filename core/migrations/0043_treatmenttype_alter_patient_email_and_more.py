# Generated by Django 5.1.5 on 2025-10-01 18:03

import core.validators
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0042_alter_appointment_duration_minutes_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TreatmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Behandlungstyp')),
                ('type_code', models.CharField(choices=[('gkv', 'GKV/LEGS'), ('private', 'Privatleistung'), ('self_pay', 'Selbstzahler'), ('mixed', 'Gemischt (GKV + Privat)')], max_length=20, verbose_name='Typ-Code')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Behandlungstyp',
                'verbose_name_plural': 'Behandlungstypen',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=core.validators.EmailField(help_text='Hauptkontakt-E-Mail des Patienten', max_length=255, validators=[django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'), django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')], verbose_name='Primäre E-Mail'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone_number',
            field=core.validators.PhoneNumberField(help_text='Hauptkontaktnummer des Patienten', max_length=20, validators=[django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$'), django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$')], verbose_name='Primäre Telefonnummer'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='postal_code',
            field=core.validators.PostalCodeField(max_length=5, validators=[django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$'), django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$')]),
        ),
        migrations.CreateModel(
            name='PriceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Preislistenname')),
                ('valid_from', models.DateField(verbose_name='Gültig ab')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Gültig bis')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('treatment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.treatmenttype', verbose_name='Behandlungstyp')),
            ],
            options={
                'verbose_name': 'Preisliste',
                'verbose_name_plural': 'Preislisten',
                'ordering': ['-valid_from', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gkv_price', models.DecimalField(blank=True, decimal_places=2, help_text='Preis nach GKV-Vergütung', max_digits=10, null=True, verbose_name='GKV-Preis (€)')),
                ('copayment_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Zuzahlungsbetrag des Patienten', max_digits=10, null=True, verbose_name='Zuzahlung (€)')),
                ('private_price', models.DecimalField(blank=True, decimal_places=2, help_text='Preis für Privatleistungen', max_digits=10, null=True, verbose_name='Privatpreis (€)')),
                ('self_pay_price', models.DecimalField(blank=True, decimal_places=2, help_text='Preis für Selbstzahler', max_digits=10, null=True, verbose_name='Selbstzahler-Preis (€)')),
                ('notes', models.TextField(blank=True, verbose_name='Notizen')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('price_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.pricelist', verbose_name='Preisliste')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='core.treatment', verbose_name='Behandlung')),
            ],
            options={
                'verbose_name': 'Behandlungspreis',
                'verbose_name_plural': 'Behandlungspreise',
                'ordering': ['treatment__treatment_name', '-price_list__valid_from'],
                'unique_together': {('treatment', 'price_list')},
            },
        ),
    ]
