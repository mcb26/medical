# Generated by Django 5.1.5 on 2025-07-31 13:45

import django.contrib.auth.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0024_add_admin_system_and_permissions'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='modulepermission',
            options={'ordering': ['user', 'module'], 'verbose_name': 'Modul-Berechtigung', 'verbose_name_plural': 'Modul-Berechtigungen'},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'verbose_name': 'Benutzer', 'verbose_name_plural': 'Benutzer'},
        ),
        migrations.AlterModelOptions(
            name='useractivitylog',
            options={'ordering': ['-timestamp'], 'verbose_name': 'Benutzeraktivität', 'verbose_name_plural': 'Benutzeraktivitäten'},
        ),
        migrations.RemoveField(
            model_name='user',
            name='default_practitioner',
        ),
        migrations.AddField(
            model_name='user',
            name='is_therapist',
            field=models.BooleanField(default=False, help_text='Therapeuten sehen nur ihre eigenen Termine und Patienten', verbose_name='Ist Therapeut'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Gültig bis'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='granted_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Erteilt am'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='granted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Erteilt von'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Aktiv'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='module',
            field=models.CharField(choices=[('appointments', 'Terminkalender'), ('patients', 'Patienten'), ('prescriptions', 'Verordnungen'), ('treatments', 'Heilmittel'), ('reports', 'Berichte'), ('finance', 'Finanzen'), ('billing', 'Abrechnung'), ('settings', 'Einstellungen'), ('users', 'Benutzerverwaltung')], max_length=20, verbose_name='Modul'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='permission',
            field=models.CharField(choices=[('none', 'Kein Zugriff'), ('read', 'Nur Lesen'), ('create', 'Erstellen'), ('update', 'Bearbeiten'), ('delete', 'Löschen'), ('full', 'Voller Zugriff')], default='none', max_length=10, verbose_name='Berechtigung'),
        ),
        migrations.AlterField(
            model_name='modulepermission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_permissions', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_appointments',
            field=models.BooleanField(default=True, verbose_name='Termine-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_finance',
            field=models.BooleanField(default=False, verbose_name='Finanzen-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_patients',
            field=models.BooleanField(default=True, verbose_name='Patienten-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_prescriptions',
            field=models.BooleanField(default=True, verbose_name='Verordnungen-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_reports',
            field=models.BooleanField(default=False, verbose_name='Berichte-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_settings',
            field=models.BooleanField(default=False, verbose_name='Einstellungen-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_access_treatments',
            field=models.BooleanField(default=True, verbose_name='Heilmittel-Zugriff'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_manage_roles',
            field=models.BooleanField(default=False, verbose_name='Rollenverwaltung'),
        ),
        migrations.AlterField(
            model_name='user',
            name='can_manage_users',
            field=models.BooleanField(default=False, verbose_name='Benutzerverwaltung'),
        ),
        migrations.AlterField(
            model_name='user',
            name='custom_permissions',
            field=models.JSONField(default=dict, verbose_name='Individuelle Berechtigungen'),
        ),
        migrations.AlterField(
            model_name='user',
            name='department',
            field=models.CharField(blank=True, max_length=100, verbose_name='Abteilung'),
        ),
        migrations.AlterField(
            model_name='user',
            name='employee_id',
            field=models.CharField(blank=True, max_length=20, verbose_name='Mitarbeiter-ID'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='hire_date',
            field=models.DateField(blank=True, null=True, verbose_name='Einstellungsdatum'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_employee',
            field=models.BooleanField(default=False, verbose_name='Mitarbeiter'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_locked',
            field=models.BooleanField(default=False, verbose_name='Konto gesperrt'),
        ),
        migrations.AlterField(
            model_name='user',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='Letzte Login-IP'),
        ),
        migrations.AlterField(
            model_name='user',
            name='lock_reason',
            field=models.TextField(blank=True, verbose_name='Sperrgrund'),
        ),
        migrations.AlterField(
            model_name='user',
            name='login_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Login-Anzahl'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.userrole', verbose_name='Benutzerrolle'),
        ),
        migrations.AlterField(
            model_name='user',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Vorgesetzter'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='action',
            field=models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Erstellt'), ('update', 'Aktualisiert'), ('delete', 'Gelöscht'), ('view', 'Angesehen'), ('export', 'Exportiert'), ('import', 'Importiert'), ('permission_change', 'Berechtigung geändert'), ('role_change', 'Rolle geändert')], max_length=20, verbose_name='Aktion'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='description',
            field=models.TextField(blank=True, verbose_name='Beschreibung'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-Adresse'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='module',
            field=models.CharField(max_length=50, verbose_name='Modul'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='object_id',
            field=models.CharField(blank=True, max_length=50, verbose_name='Objekt-ID'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='object_type',
            field=models.CharField(blank=True, max_length=50, verbose_name='Objekt-Typ'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Zeitstempel'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Benutzer'),
        ),
        migrations.AlterField(
            model_name='useractivitylog',
            name='user_agent',
            field=models.TextField(blank=True, verbose_name='User-Agent'),
        ),
        migrations.AlterField(
            model_name='userrole',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='userrole',
            name='name',
            field=models.CharField(choices=[('owner', 'Inhaber'), ('admin', 'Administrator'), ('doctor', 'Arzt'), ('nurse', 'Krankenschwester'), ('receptionist', 'Empfang'), ('accountant', 'Buchhalter'), ('assistant', 'Assistent'), ('intern', 'Praktikant')], max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='userrole',
            name='permissions',
            field=models.JSONField(default=dict),
        ),
        migrations.AlterUniqueTogether(
            name='modulepermission',
            unique_together={('user', 'module')},
        ),
    ]
