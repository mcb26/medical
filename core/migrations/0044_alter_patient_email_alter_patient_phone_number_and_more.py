# Generated by Django 5.1.5 on 2025-10-01 18:23

import core.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0043_treatmenttype_alter_patient_email_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=core.validators.EmailField(help_text='Hauptkontakt-E-Mail des Patienten', max_length=255, validators=[django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'), django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')], verbose_name='Primäre E-Mail'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone_number',
            field=core.validators.PhoneNumberField(help_text='Hauptkontaktnummer des Patienten', max_length=20, validators=[django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$'), django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$')], verbose_name='Primäre Telefonnummer'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='postal_code',
            field=core.validators.PostalCodeField(max_length=5, validators=[django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$'), django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$')]),
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(default='light', max_length=20, verbose_name='Theme')),
                ('language', models.CharField(default='de', max_length=10, verbose_name='Sprache')),
                ('timezone', models.CharField(default='Europe/Berlin', max_length=50, verbose_name='Zeitzone')),
                ('default_calendar_view', models.CharField(default='timeGridWeek', max_length=20, verbose_name='Standard Kalenderansicht')),
                ('receive_email_notifications', models.BooleanField(default=True, verbose_name='E-Mail-Benachrichtigungen')),
                ('receive_sms_notifications', models.BooleanField(default=False, verbose_name='SMS-Benachrichtigungen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_practitioner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.practitioner', verbose_name='Standard-Behandler')),
                ('default_room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.room', verbose_name='Standardraum')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Benutzerpräferenz',
                'verbose_name_plural': 'Benutzerpräferenzen',
            },
        ),
    ]
