# Generated by Django 5.1.5 on 2025-10-01 18:53

import core.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0044_alter_patient_email_alter_patient_phone_number_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='initials',
            field=models.CharField(blank=True, help_text='Kürzel für Änderungshistorie (nur Admin kann ändern)', max_length=10, verbose_name='Kürzel'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='email',
            field=core.validators.EmailField(help_text='Hauptkontakt-E-Mail des Patienten', max_length=255, validators=[django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'), django.core.validators.RegexValidator(message='E-Mail-Adresse muss ein gültiges Format haben', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')], verbose_name='Primäre E-Mail'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='phone_number',
            field=core.validators.PhoneNumberField(help_text='Hauptkontaktnummer des Patienten', max_length=20, validators=[django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$'), django.core.validators.RegexValidator(message='Telefonnummer muss ein gültiges deutsches Format haben (z.B. +49 123 456789 oder 0123 456789)', regex='^(\\+49|0)[0-9\\s\\-\\(\\)]{6,20}$')], verbose_name='Primäre Telefonnummer'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='postal_code',
            field=core.validators.PostalCodeField(max_length=5, validators=[django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$'), django.core.validators.RegexValidator(message='PLZ muss genau 5 Ziffern haben', regex='^[0-9]{5}$')]),
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_initials', models.CharField(blank=True, max_length=10)),
                ('model_name', models.CharField(max_length=100)),
                ('object_id', models.PositiveIntegerField()),
                ('action', models.CharField(choices=[('create', 'Erstellt'), ('update', 'Geändert'), ('delete', 'Gelöscht'), ('view', 'Angesehen')], max_length=10)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('old_value', models.TextField(blank=True)),
                ('new_value', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['model_name', 'object_id'], name='core_auditl_model_n_3fb686_idx'), models.Index(fields=['user', 'timestamp'], name='core_auditl_user_id_7b678c_idx'), models.Index(fields=['timestamp'], name='core_auditl_timesta_80074f_idx')],
            },
        ),
    ]
